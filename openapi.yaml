openapi: 3.0.0
servers:
  - url: http://localhost:8080/api
info:
  description: Detroit Fasion and Tech Hackathon
  version: 1.0.0
  title: DFTH 2020
paths:
  /order:
    get:
      operationId: getOrders
      responses:
        '200':
          description: Retrieve summaries of all orders.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Orders'
      tags:
        - Order
    post:
      operationId: createOrder
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateOrder'
      responses:
        '200':
          description: A new order is created and returned.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Order'
      tags:
        - Order
  /order/{orderId}:
    get:
      operationId: getOrder
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Retrieve a specific order.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: An order is not found.
      tags:
        - Order
  /order/{orderId}/item/{orderItemId}:
    get:
      operationId: getOrderItem
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: orderItemId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Retrieve a specific order item from an order.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OrderItem'
        '404':
          description: An order item is not found.
      tags:
        - Order Item
  /productionStep/{productionStepId}:
    get:
      operationId: getProductionStep
      parameters:
        - in: path
          name: productionStepId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Retrieve a specific production step from an order item.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductionStep'
        '400':
          description: The production step was not found.
      tags:
        - Production Step
    post:
      operationId: updateProductionStep
      parameters:
        - in: path
          name: productionStepId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UpdateProductionStep'
      responses:
        '202':
          description: The production step was successfully updated.
        '404':
          description: The production step was not successfully updated.
      tags:
        - Production Step
components:
  schemas:
    CreateOrder:
      type: object
      properties:
        numOrderItems:
          type: integer
          format: int32
    Orders:
      type: object
      required:
        - orders
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Order:
      type: object
      required:
        - id
        - orderItems
      properties:
        id:
          type: string
          format: uuid
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    OrderItem:
      type: object
      required:
        - id
        - productionSteps
      properties:
        id:
          type: string
          format: uuid
        productionSteps:
          type: array
          items:
            $ref: '#/components/schemas/ProductionStep'
    ProductionStep:
      type: object
      required:
        - id
        - stepCode
        - title
        - description
        - media
        - status
        - order
      properties:
        id:
          type: string
          format: uuid
        stepCode:
          type: string
        title:
          type: string
        description:
          type: string
        media:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/ProductionStepStatus'
        order:
          type: number
          format: int32
    ProductionStepStatus:
      type: string
      enum:
        - not_started
        - in_progress
        - complete
    UpdateProductionStep:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/ProductionStepStatus'